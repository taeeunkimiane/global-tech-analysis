# 데이터 수집 스케줄러용 Dockerfile
FROM python:3.9-slim

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 패키지 설치
RUN apt-get update && apt-get install -y \
    cron \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Python 패키지 의존성 설치
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt

# NLTK 데이터 다운로드
RUN python -c "import nltk; nltk.download('punkt'); nltk.download('vader_lexicon')"

# 애플리케이션 코드 복사
COPY news_scraper.py .
COPY advanced_analytics.py .
COPY utils.py .
COPY data_collector.py .

# 데이터 디렉토리 생성
RUN mkdir -p data config logs

# 크론 작업 설정 파일 생성
RUN echo "0 */6 * * * cd /app && python data_collector.py >> /app/logs/collector.log 2>&1" > /etc/cron.d/data-collector

# 크론 작업 권한 설정
RUN chmod 0644 /etc/cron.d/data-collector
RUN crontab /etc/cron.d/data-collector

# 환경 변수 설정
ENV PYTHONPATH=/app
ENV COLLECTION_INTERVAL=21600

# 로그 디렉토리 생성 및 권한 설정
RUN touch /app/logs/collector.log
RUN touch /var/log/cron.log

# 시작 스크립트 생성
RUN echo '#!/bin/bash\n\
echo "데이터 수집 스케줄러 시작..."\n\
# 초기 데이터 수집 실행\n\
python /app/data_collector.py\n\
# 크론 데몬 시작\n\
cron\n\
# 로그 감시\n\
tail -f /app/logs/collector.log /var/log/cron.log' > /app/start.sh

RUN chmod +x /app/start.sh

# 실행 명령어
CMD ["/app/start.sh"]
